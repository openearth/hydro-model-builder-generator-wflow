sudo: required
language: python
python:
    - 2.7
cache:
  directories:
  - "$HOME/google-cloud-sdk/"

#env:
#    - GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin
#      PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1

services:
    - docker
before_install:
#    - if [ ! -d "${GAE_PYTHONPATH}" ]; then python scripts/fetch_gae_sdk.py $(dirname
#      "${GAE_PYTHONPATH}"); fi
    # Decrypt the credentials we added to the repo using the key we added with the Travis
    - openssl aes-256-cbc -K $encrypted_913d75bf94a2_key -iv $encrypted_913d75bf94a2_iv
      -in credentials.tar.gz.enc -out credentials.tar.gz -d
    # If the SDK is not already cached, download it and unpack it
#    - if [ ! -d ${HOME}/google-cloud-sdk ]; then
#         curl https://sdk.cloud.google.com | bash;
#      fi
    - tar -xzf credentials.tar.gz
    - mkdir -p lib
    # Here we use the decrypted service account credentials to authenticate the command line tool
    - gcloud auth activate-service-account --key-file client-secret.json
    - docker build -t hydroearth/hydro-model-generator-wflow .
    - docker run hydroearth/hydro-model-generator-wflow

install:
    # Set the app to deploy
    - gcloud config set project hydro-model-generator-wflow
    - gcloud -q components update gae-python

    # Run tests
    - pip install -U tox-travis

script:
    - gcloud -q preview app deploy app.yaml --promote
    - tox
deploy:
    provider: script
    script: bash docker_push
    on:
        branch: Docker-implementation
